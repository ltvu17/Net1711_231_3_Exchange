@model TransactionDTO
@{
    ViewData["Title"] = "Create";
}

<h1>Create Transaction</h1>

<hr />

<div class="form-group row">
    <div class="col-md-6">
        <label for="ProductId">Product</label>
        <select id="ProductId" class="form-control" onchange="fetchProductPrice()"></select>
    </div>
    <div class="col-md-6">
        <label for="Quantity">Quantity</label>
        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <div class="col-md-6">
        <label for="Note">Note</label>
        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <div class="col-md-6">
        <label for="Price">Price</label>
        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "Price", @readonly = "readonly" } })
        
    </div>
    <div class="col-md-6">
        <label for="payment">Type Transaction</label>
        @Html.DropDownListFor(model => model.TypeTransactions, new SelectList(new List<string> { "Sell", "Exchange" }), new { @class = "form-control" })

    </div>
</div>



<script>
    $(document).ready(function () {
        getAllProducts(@Model.ProductId);
    });

    function getAllProducts(selectedProductId) {
        $.ajax({
            url: '@Url.Action("GetAll", "Product")',
            type: "GET",
            dataType: "json",
            success: function (result) {
                // Clear previous options
                $('#ProductId').empty();
                // Add each product as an option to the dropdown list
                $.each(result, function (key, item) {
                    $('#ProductId').append($('<option>', {
                        value: item.id,
                        text: item.name,
                        selected: item.id === selectedProductId,
                    }));

                });

            },
            error: function (xhr, error) {
                console.error('Error fetching products:', error);
                alert('Something went wrong while fetching products!');
            }
        });
    }

    function fetchProductPrice() {
        var productId = $('#ProductId').val();
        console.log("Fetching price for productId:", productId); // Logging for debugging

        $.ajax({
            url: '@Url.Action("GetProductById", "Product")',
            type: "GET",
            data: { id: productId },
            dataType: "json",
            success: function (result) {
                if (result && result.price !== undefined) {
                    console.log("Price fetched:", result.price); // Logging for debugging
                    $('#Price').val(result.price);
                } else {
                    console.error('Error in result:', result.message);
                    alert(result.message || 'Error fetching price');
                }
            },
            error: function (xhr, error) {
                console.error('Error fetching price:', error);
                alert('Something went wrong while fetching price!');
            }
        });
    }
    
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

