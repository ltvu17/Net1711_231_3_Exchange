@model TransactionDTO

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Transaction</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">

                <input asp-for="Status" class="form-control" type ="hidden"/>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductId" class="control-label" onchange="fetchProductPrice()"></label>
                <select id="ProductId" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" readonly/>
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Note" class="control-label"></label>
                <input asp-for="Note" class="form-control" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="TypeTransactions" class="control-label"></label>
                <input asp-for="TypeTransactions" class="form-control" />
                <span asp-validation-for="TypeTransactions" class="text-danger"></span>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    $(document).ready(function () {
        getAllCourt(@Model.ProductId);
    });

    function getAllCourt(selectedProductId) {
        var productId = $('#ProductId').val();

        $.ajax({
            url: '@Url.Action("GetAll", "Products")',
            type: "GET",
            data: { productId: productId },
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                // Clear previous options
                $('#ProductId').empty();
                // Add each court as an option to the dropdown list
                $.each(result, function (key, item) {
                    $('#ProductId').append($('<option>', {
                        value: item.id,
                        text: item.name,
                        selected: item.id === selectedProductId
                    }));
                    $('#Price').append($('<option>', {
                        value: item.id,
                        text: item.name,
                        selected: item.id === selectedProductId
                    }));
                });
            },
            error: function (xhr, error) {
                alert(xhr.statusText);
                alert('Something went wrong!');
            }
        });
    }
    function fetchProductPrice() {
        var productId = $('#ProductId').val();
        $.ajax({
            url: '@Url.Action("GetPrice", "Products")',
            type: "GET",
            data: { productId: productId },
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.success) {
                    $('#ProductPrice').text(result.price);
                } else {
                    alert(result.message);
                }
            },
            error: function (xhr, error) {
                alert(xhr.statusText);
                alert('Something went wrong!');
            }
        });
    }
    // Initialize the product list on page load


</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
