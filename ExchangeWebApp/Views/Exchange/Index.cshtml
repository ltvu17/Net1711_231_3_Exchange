@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<div class="row">
    <div class="col-md-10">
        <h3 class="display-8">Exchange List</h3>
    </div>
    <div class="col-md-10 text-end d-flex justify-content-between">
        <input type="text" class="form-control m-1" id="keyFind" placeholder="Product,Transaction,Status" />
        <button class="btn btn-primary m-1" id="btnFind" style="min-width:80px" type="button" onclick="searchProduct()">Search</button>
    </div>
    <div class="col-md-2 text-end">
        <button type="button" class="btn btn-primary" onclick="add()">
            Add
        </button>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="card-header">
                    <th class="card-title text-center">ID</th>
                    <th class="card-title text-center">Product Exchange Id</th>
                    <th class="card-title text-center">Transaction Id</th>
                    <th class="card-title text-center">Status</th>
                    <th class="card-title text-center">Send Date</th>
                    <th class="card-title text-center">Receive Date</th>
                    <th class="card-title text-center">Cancel Date</th>
                    <th class="card-title text-center">Cancel Reason</th>
                    <th class="card-title text-center">Ship Cost</th>
                    <th class="card-title text-center">Ship Code</th>
                    <th class="card-title text-center">Ship Status</th>
                </tr>
            </thead>
            <tbody class="tblTopUpList">
            </tbody>
        </table>
        <div id="pagination" class="row">
            <div class="col-md-12 text-center">
                <ul class="pagination">
                    <!-- Các nút phân trang sẽ được thêm vào đây bằng JavaScript -->
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="exchangeModal" tabindex="-1" aria-labelledby="exchangeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("CreateExchange", "Exchange", FormMethod.Post, new { name = "frm", id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="exchangeModalLabel">TopUp Transaction</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="exchangeModalContent"></div>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btSave" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="exchangeModalEdit" tabindex="-1" aria-labelledby="exchangeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("UpdateExchange", "Exchange", FormMethod.Post, new { name = "frm", id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="exchangeModalLabelEdit">TopUp Transaction</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="exchangeModalContentEdit"></div>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btSave" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>
<div class="modal fade" id="exchangeModalDetail" tabindex="-1" aria-labelledby="exchangeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("UpdateExchange", "Exchange", FormMethod.Post, new { name = "frm", id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="exchangeModalLabelDetail">TopUp Transaction</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="exchangeModalContentDetail"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>
@section scripts {
    <script type="text/javascript">
        var loadedList = [];
        $(document).ready(function () {
            loadData(1);
        });
        var searchList = [];
        function loadData(page) {
            if (searchList.length == 0) {
                var pageSize = 5;
                $.ajax({
                    url: '@Url.Action("GetAll", "Exchange")',
                    type: "GET",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        var startIndex = (page - 1) * pageSize;
                        var endIndex = Math.min(startIndex + pageSize - 1, result.length - 1);
                        var currentPageItems = result.slice(startIndex, endIndex + 1);
                        loadedList = result;
                        var html = '';
                        if (currentPageItems.length > 0) {
                            $.each(currentPageItems, function (key, item) {
                                html += '<tr>';
                                html += '<td>' + item.id + '</td>';
                                html += '<td>' + item.exchangeId + '</td>';
                                html += '<td>' + item.transactionId + '</td>';
                                html += '<td>' + item.status + '</td>';
                                html += '<td>' + item.sendDate + '</td>';
                                html += '<td>' + item.receiveDate + '</td>';
                                html += '<td>' + item.cancelDate + '</td>';
                                html += '<td>' + item.cancelReason + '</td>';
                                html += '<td>' + item.shipCost + '</td>';
                                html += '<td>' + item.shipCode + '</td>';
                                html += '<td>' + item.shipStatus + '</td>';
                                html += '<td><a href="#" onclick="detail(\'' + item.id + '\')">Detail</a> |<a href="#" onclick="edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="deleteItem(\'' + item.id + '\')">Delete</a></td>';
                                html += '</tr>';
                            });

                            $('.tblTopUpList').html(html);
                            var totalCount = result.length;
                            var totalPages = Math.ceil(totalCount / pageSize);
                            renderPagination(page, totalPages);
                        } else {
                            $('.tblTopUpList').html('<tr><td colspan="11">No data available</td></tr>');
                            $('#pagination ul').empty();
                        }
                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            } else {
                var pageSize = 5;
                var startIndex = (page - 1) * pageSize;
                var endIndex = Math.min(startIndex + pageSize - 1, searchList.length - 1);
                var currentPageItems = searchList.slice(startIndex, endIndex + 1);
                var html = '';
                if (currentPageItems.length > 0) {
                    $.each(currentPageItems, function (key, item) {
                        html += '<tr>';
                        html += '<td>' + item.id + '</td>';
                        html += '<td>' + item.exchangeId + '</td>';
                        html += '<td>' + item.transactionId + '</td>';
                        html += '<td>' + item.status + '</td>';
                        html += '<td>' + item.sendDate + '</td>';
                        html += '<td>' + item.receiveDate + '</td>';
                        html += '<td>' + item.cancelDate + '</td>';
                        html += '<td>' + item.cancelReason + '</td>';
                        html += '<td>' + item.shipCost + '</td>';
                        html += '<td>' + item.shipCode + '</td>';
                        html += '<td>' + item.shipStatus + '</td>';
                        html += '<td><a href="#" onclick="detail(\'' + item.id + '\')">Detail</a> |<a href="#" onclick="edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="deleteItem(\'' + item.id + '\')">Delete</a></td>';
                        html += '</tr>';
                    });
                    $('.tblTopUpList').html(html);
                    var totalCount = searchList.length;
                    var totalPages = Math.ceil(totalCount / pageSize);
                    renderPagination(page, totalPages);
                } else {
                    $('.tblTopUpList').html('<tr><td colspan="11">No data available</td></tr>');
                    $('#pagination ul').empty();
                }
            }
            
        }
        function renderPagination(currentPage, totalPages) {
            var paginationHtml = '';
            for (var i = 1; i <= totalPages; i++) {
                if (i === currentPage) {
                    paginationHtml += '<li class="page-item active"><button class="page-link">' + i + '</button></li>';
                } else {
                    paginationHtml += '<li class="page-item"><button class="page-link" onclick="loadData(' + i + ')">' + i + '</button></li>';
                }
            }

            $('#pagination ul').html(paginationHtml);
        }
        function searchProduct() {
            searchList = [];
            var keyF = document.getElementById("keyFind").value ? document.getElementById("keyFind").value : " ";
            if (keyF == " " || methodF == 0) loadData(1);
            else {
                var split = keyF.split(",");
                console.log(split);
                var methodF = split.length;
                var html = '';
                $.each(loadedList, function (key, item) {
                    var value1, value2, value3;
                    if (methodF == 1) {
                        value1 = item.exchangeId.toString();
                        if (value1.toLowerCase().includes(split[0].toLowerCase())) {
                            html += '<tr>';
                            html += '<td>' + item.id + '</td>';
                            html += '<td>' + item.exchangeId + '</td>';
                            html += '<td>' + item.transactionId + '</td>';
                            html += '<td>' + item.status + '</td>';
                            html += '<td>' + item.sendDate + '</td>';
                            html += '<td>' + item.receiveDate + '</td>';
                            html += '<td>' + item.cancelDate + '</td>';
                            html += '<td>' + item.cancelReason + '</td>';
                            html += '<td>' + item.shipCost + '</td>';
                            html += '<td>' + item.shipCode + '</td>';
                            html += '<td>' + item.shipStatus + '</td>';
                            html += '<td><a href="#" onclick="detail(\'' + item.id + '\')">Detail</a> |<a href="#" onclick="edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="deleteItem(\'' + item.id + '\')">Delete</a></td>';
                            html += '</tr>';
                            searchList.push(item);
                        }
                    }
                    else if (methodF == 2) {
                        value1 = item.exchangeId.toString();
                        value2 = item.transactionId.toString();
                        if (value1.toLowerCase().includes(split[0].toLowerCase()) && value2.toLowerCase().includes(split[1].toLowerCase())) {
                            html += '<tr>';
                            html += '<td>' + item.id + '</td>';
                            html += '<td>' + item.exchangeId + '</td>';
                            html += '<td>' + item.transactionId + '</td>';
                            html += '<td>' + item.status + '</td>';
                            html += '<td>' + item.sendDate + '</td>';
                            html += '<td>' + item.receiveDate + '</td>';
                            html += '<td>' + item.cancelDate + '</td>';
                            html += '<td>' + item.cancelReason + '</td>';
                            html += '<td>' + item.shipCost + '</td>';
                            html += '<td>' + item.shipCode + '</td>';
                            html += '<td>' + item.shipStatus + '</td>';
                            html += '<td><a href="#" onclick="detail(\'' + item.id + '\')">Detail</a> |<a href="#" onclick="edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="deleteItem(\'' + item.id + '\')">Delete</a></td>';
                            html += '</tr>';
                            searchList.push(item);
                        }
                    }
                    else if (methodF == 3) {
                        value1 = item.exchangeId.toString();
                        value2 = item.transactionId.toString();
                        value3 = item.status.toString();
                        if (value1.toLowerCase().includes(split[0].toLowerCase()) && value2.toLowerCase().includes(split[1].toLowerCase()) && value3.toLowerCase().includes(split[2].toLowerCase())) {
                            html += '<tr>';
                            html += '<td>' + item.id + '</td>';
                            html += '<td>' + item.exchangeId + '</td>';
                            html += '<td>' + item.transactionId + '</td>';
                            html += '<td>' + item.status + '</td>';
                            html += '<td>' + item.sendDate + '</td>';
                            html += '<td>' + item.receiveDate + '</td>';
                            html += '<td>' + item.cancelDate + '</td>';
                            html += '<td>' + item.cancelReason + '</td>';
                            html += '<td>' + item.shipCost + '</td>';
                            html += '<td>' + item.shipCode + '</td>';
                            html += '<td>' + item.shipStatus + '</td>';
                            html += '<td><a href="#" onclick="detail(\'' + item.id + '\')">Detail</a> |<a href="#" onclick="edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="deleteItem(\'' + item.id + '\')">Delete</a></td>';
                            html += '</tr>';
                            searchList.push(item);
                        }
                    }
                });
                $('.tblTopUpList').html(html);
                $('#pagination ul').empty();
                loadData(1);
            }
        }
        function add() {
            $("#exchangeModalContent").html("");
            $("#exchangeModalLabel").html("Add New");

            $.ajax({
                url: '@Url.Action("Create", "Exchange")',
                type: "GET",
                success: function (result) {
                    $("#exchangeModalContent").html(result);
                    $('#exchangeModal').modal('show');
                },
                error: function (message) {
                    alert(message);
                }
            });
        };
        function detail(itemId) {
            $("#exchangeModalContentDetail").html("");
            $("#exchangeModalLabelDetail").html("Detail");

            $.ajax({
                url: '@Url.Action("Detail", "Exchange")' + `?id=${itemId}`,
                type: "GET",
                success: function (result) {
                    $("#exchangeModalContentDetail").html(result);
                    $('#exchangeModalDetail').modal('show');
                },
                error: function (message) {
                    alert(message);
                }
            });
        };


        function edit(itemId) {
            $("#exchangeModalContentEdit").html("");
            $("#exchangeModalLabelEdit").html("Edit");

            $.ajax({
                url: '@Url.Action("Edit", "Exchange")' + `?id=${itemId}`,
                type: "GET",
                success: function (result) {
                    $("#exchangeModalContentEdit").html(result);
                    $('#exchangeModalEdit').modal('show');
                },
                error: function (message) {
                    alert(message);
                }
            });
        };

        function deleteItem(itemId) {
            if (confirm("You want to delete this record ?") == true) {
                $.ajax({
                    url: '@Url.Action("DeleteExchange", "Exchange")' + `?id=${itemId}`,
                    type: "POST",
                    success: function (result) {


                        location.reload();
                    },
                    error: function (message) {
                        alert(message);
                    }
                });
            } else {
                
            }
        };


    </script>
}