@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="row">
    <div class="col-md-10">
        <h2 class="display-8">Booking List</h2>
    </div>
    <div class="col-md-2 text-end">
        <button type="button" class="btn btn-primary" onclick="add()">
            Add
        </button>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="card-header">
                    <th class="card-title text-center">Id</th>
                    <th class="card-title text-center">Reporter</th>
                    <th class="card-title text-center">Assignee</th>
                    <th class="card-title text-center">Product Id</th>
                    <th class="card-title text-center">Report Time</th>
                    <th class="card-title text-center">Reason</th>
                    <th class="card-title text-center">Approve By</th>
                    <th class="card-title text-center">Approve Time</th>
                    <th class="card-title text-center">Reply</th>
                    <th class="card-title text-center">Status</th>
                    <th class="card-title text-center"></th>
                </tr>
            </thead>
            <tbody class="tblList">
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="exchangeModal" tabindex="-1" aria-labelledby="exchangeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="exchangeModalLabel">Topup Title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="exchangeModalContent"></div>
                </div>
                <div class="modal-footer">
                    <button id="btSave" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>

            }
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            loadData();
        });

        function loadData() {
            $.ajax({
                url: '@Url.Action("GetAll", "Reports")',
                type: "GET",
                success: function (result) {
                    var html = '';
                     console.log(result);
                    $.each(result, function (key, item) {
                        console.log(item);
                        html += '<tr>';
                        html += '<td>' + item.id + '</td>';
                        html += '<td>' + item.reporter + '</td>';
                        html += '<td>' + item.assignee + '</td>';
                        html += '<td>' + item.productId + '</td>';
                        html += '<td>' + item.reportTime + '</td>';
                        html += '<td>' + item.reason + '</td>';
                        html += '<td>' + item.approveBy + '</td>';
                        html += '<td>' + item.approveTime + '</td>';
                        html += '<td>' + item.reply + '</td>';
                        html += '<td>' + item.status + '</td>';
                        html += '<td><button type="button" class="btn btn-outline-primary" onclick ="return edit(\'' + item.id + '\')">Edit</button> | <button type="button" class="btn btn-outline-danger" onclick ="return deleteItem(\'' + item.id + '\')">Delete</a></td>';
                        html += '</tr>';
                    });
                    $('.tblList').html(html);
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                    alert(`Something went wrong!`);
                }
            });
        }
        function add() {
            $("#exchangeModalContent").html("");
            $("#exchangeModalLabel").html("Add New");

            $.ajax({
                url: '@Url.Action("Create", "Reports")',
                type: "GET",
                success: function (result) {
                    $("#exchangeModalContent").html(result);
                    $('#exchangeModal').modal('show');

                    $("#btSave").off("click").on("click", function () {
                        create();
                    });

                },
                error: function (message) {
                    alert(message);
                }
            });
        }
        function create() {
            var data = {
                reporter: $("#Reporter").val(),
                assignee: $("#Assignee").val(),
                productId: $("#ProductId").val(),
                reportTime: convertToISODateTime($("#ReportTime").val()),
                reason: $("#Reason").val(),
                approveBy: $("#ApproveBy").val(),
                approveTime: convertToISODateTime($("#ApproveTime").val()),
                reply: $("#Reply").val(),
                status: $("#Status").val(),
            };

            console.log(data);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateReport", "Reports")',
                contentType: 'application/json;charset=utf-8',
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                    if (result.status >= 1) {
                        $('#exchangeModal').modal('hide');
                        loadData();
                    }
                    alert("Created new booking sucessfully!");
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert(`Something went wrong!`);
                }
            });
        }
        function convertToISODateTime(dateTimeString) {
            // Create a new Date object from the date-time string
            const date = new Date(dateTimeString);

            // Get the components of the date and time
            const year = date.getFullYear();
            const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-indexed
            const day = date.getDate().toString().padStart(2, '0');
            const hours = date.getHours().toString().padStart(2, '0');
            const minutes = date.getMinutes().toString().padStart(2, '0');
            const seconds = date.getSeconds().toString().padStart(2, '0');

            // Construct the ISO 8601 date-time string
            const isoDateTime = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`;

            return isoDateTime;
        }
        function edit(id) {
            $("#exchangeModalContent").html("");
            $("#exchangeModalLabel").html(`Edit Report [${id}]`);
            $.ajax({
                url: '@Url.Action("Edit", "Reports")' + '/' + id,
                type: "GET",
                success: function (result) {
                    $("#exchangeModalContent").html(result);
                    $('#exchangeModal').modal('show');

                    $("#btSave").off("click").on("click", function () {
                        update(id);
                    });
                },
                error: function (message) {
                    alert(message);
                }
            });
        }
        function update(id) {
            var data = {
                reporter: $("#Reporter").val(),
                assignee: $("#Assignee").val(),
                productId: $("#ProductId").val(),
                reportTime: convertToISODateTime($("#ReportTime").val()),
                reason: $("#Reason").val(),
                approveBy: $("#ApproveBy").val(),
                approveTime: convertToISODateTime($("#ApproveTime").val()),
                reply: $("#Reply").val(),
                status: $("#Status").val(),
            };

            console.log(data);

            $.ajax({
                type: 'PUT',
                url: '@Url.Action("Update", "Reports")/'+ "?id=" +id,
                contentType: 'application/json;charset=utf-8',
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                    if (result.status >= 1) {
                        $('#exchangeModal').modal('hide');
                        loadData();
                    }
                    alert(`Updated report id:${id} sucessfully!`);
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert(`Something went wrong!`);
                }
            });
        }

        function deleteItem(id) {
            var result = confirm(`Are you sure to delete booking [${id}]?`);
            if (result) {

                $.ajax({
                    url: '@Url.Action("Delete", "Reports")/' + '?id=' + id,
                    type: 'DELETE',
                    contentType: 'application/json;charset=utf-8',
                    dataType: "json",
                    success: function (result) {
                        loadData();
                        alert(`Deleted report [${id}] sucessfully!`);
                    },
                    error: function (xhr, error) {
                        console.log(xhr);
                        alert(`Something went wrong!`);
                    }
                });
            }
        }

    </script>
}
