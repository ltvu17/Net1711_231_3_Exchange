@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model ProductDTO
<div class="text-start">
    <div class="row justify-content-between">
        <div class="col-md-3">
            <h3 class="display-8">Product List</h3>
        </div>
        <div class="col-md-5 text-end d-flex justify-content-between">
            <input type="text" class="form-control m-1" id="keyFind" placeholder="Product name,title,content post"/>
            <button class="btn btn-primary m-1" id="btnFind" style="min-width:80px" type="button" onclick="searchProduct()">Search</button>
            <button type="button" class="btn btn-primary m-1" style="min-width:80px" data-bs-toggle="modal" data-bs-target="#addModal">
                Add
            </button>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr class="card-header">
                        <th class="card-title text-center">Product Id</th>
                        <th class="card-title text-center">Product Name</th>
                        <th class="card-title text-center">Quantity</th>
                        <th class="card-title text-center">Post Date</th>
                        <th class="card-title text-center">Report Time</th>
                        <th class="card-title text-center">Title</th>
                        <th class="card-title text-center">Rate</th>
                        <th class="card-title text-center">Content</th>
                        <th class="card-title text-center">Price</th>
                        <th class="card-title text-center">Approve By</th>
                        <th class="card-title text-center">Approve Date</th>
                        <th class="card-title text-center">Category Id</th>
                        <th class="card-title text-center">Image</th>
                        <th class="card-title text-center">Action</th>
                    </tr>
                </thead>
                <tbody class="tblTopUpList">
                </tbody>
            </table>
            <div id="pagination" class="row">
                <div class="col-md-12 text-center">
                    <ul class="pagination">
                        <!-- Các nút phân trang sẽ được thêm vào đây bằng JavaScript -->
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                
                    <div class="modal-header">
                        <h5 class="modal-title" id="addLabel">Add Product</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                    <form method="post" id="addForm" asp-action="CreateProduct" asp-controller="Product" enctype="multipart/form-data">
                        <div id="topUpModalContent">
                            <div class="row">
                                <div class="col-md-4 text-start">
                                    <label for="mahh" class="col-form-label">Product Id:</label>
                                    <input type="text" class="form-control" id="pid" readonly>
                                </div>
                                <div class="col-md-4 text-start">
                                    <label for="dgb" class="col-form-label">Product Name:</label>
                                    <input type="text" class="form-control" asp-for="Name"  id="pname">
                                </div>
                                <div class="col-md-4 text-start">
                                    <label for="quantity" class="col-form-label">Quantity:</label>
                                    <input type="text" class="form-control" asp-for="Quantity" id="quantity">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4 text-start">
                                    <label for="title" class="col-form-label">Title:</label>
                                    <input type="text" class="form-control" asp-for="Title" id="title">
                                </div>
                                <div class="col-md-8 text-start">
                                    <label for="content" class="col-form-label">Content:</label>
                                    <input type="text" class="form-control" asp-for="ContentPost" id="content">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4 text-start">
                                    <label for="price" class="col-form-label">Price:</label>
                                    <input type="text" class="form-control" asp-for="Price" id="price">
                                </div>
                                <div class="col-md-4 text-start">

                                    <label for="cateId" class="col-form-label">Category Id:</label>
                                    @Html.DropDownListFor(model => model.CategoryId, new SelectList(new[] {
                                    new { Value = 1, Text = "Cate1" },
                                    new { Value = 2, Text = "Cate2" },
                                    new { Value = 1002, Text = "Cate3" }
                                    }, "Value", "Text"), new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-8 text-start">
                                    <label for="img" class="col-form-label">Image Path:</label>
                                    <input type="file" class="form-control" id="img" name="img"/>
                                </div>
                            </div>
                        </div>
                    </form>
                    </div>
                    <div class="modal-footer">
                    <button id="btSave" type="button" class="btn btn-primary" onclick="submitAdd()">Save</button>
                        <button type="button" id="btnCloseModal" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="exchangeModalUpdate" tabindex="-1" aria-labelledby="exchangeModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                @using (Html.BeginForm("UpdateProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data", name = "frm", id = "frm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="exchangeModalLabelUpdate">TopUp Transaction</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div id="exchangeModalContentUpdate"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                }
            </div>
        </div>
    </div>

</div>
    @section scripts {
        <script type="text/javascript">
            var loadedList = [];
            $(document).ready(function () {
                loadData(1);
            });
            function submitAdd(){
                document.getElementById("addForm").submit();
            }
            var searchList = [];
        function loadData(page) {
            if (searchList.length == 0) {
                $.ajax({
                    url: '@Url.Action("GetAll", "Product")',
                    type: "GET",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        var html = '';
                        loadedList = result;
                        var pageSize = 5;
                        var startIndex = (page - 1) * pageSize;
                        var endIndex = Math.min(startIndex + pageSize - 1, result.length - 1);
                        var currentPageItems = result.slice(startIndex, endIndex + 1);
                        if (currentPageItems.length > 0) {
                            $.each(currentPageItems, function (key, item) {
                                html += '<tr>';
                                html += '<td class="fs-6">' + item.id + '</td>';
                                html += '<td class="fs-6">' + item.name + '</td>';
                                html += '<td class="fs-6">' + item.quantity + '</td>';
                                html += '<td class="fs-6">' + item.createOn + '</td>';
                                html += '<td class="fs-6">' + item.reportTime + '</td>';
                                html += '<td class="fs-6">' + item.title + '</td>';
                                html += '<td class="fs-6">' + item.rate + '</td>';
                                html += '<td class="fs-6">' + item.contentPost + '</td>';
                                html += '<td class="text-end fs-6">' + item.price + '</td>';
                                html += '<td class="text-end fs-6">' + item.approveBy + '</td>';
                                html += '<td class="text-end fs-6">' + item.approveDate + '</td>';
                                html += '<td class="text-end fs-6">' + item.categoryId + '</td>';
                                html += '<td class="text-end"><img src="' + (item.imgKey ? item.imgKey : "../imgs/loading.png") + '" style="width:auto; height:100px"/></td>';
                                html += '<td><a href="#" onclick="return edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="delele(\'' + item.id + '\')">Delete</a></td>';
                                html += '</tr>';
                            });
                            $('.tblTopUpList').html(html);
                            var totalCount = result.length;
                            var totalPages = Math.ceil(totalCount / pageSize);
                            renderPagination(page, totalPages);
                        } else {
                            $('.tblTopUpList').html('<tr><td colspan="11">No data available</td></tr>');
                            $('#pagination ul').empty();
                        }

                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            } else {
                var html = '';
                var pageSize = 5;
                var startIndex = (page - 1) * pageSize;
                var endIndex = Math.min(startIndex + pageSize - 1, searchList.length - 1);
                var currentPageItems = searchList.slice(startIndex, endIndex + 1);
                if (currentPageItems.length > 0) {
                    $.each(currentPageItems, function (key, item) {
                        html += '<tr>';
                        html += '<td class="fs-6">' + item.id + '</td>';
                        html += '<td class="fs-6">' + item.name + '</td>';
                        html += '<td class="fs-6">' + item.quantity + '</td>';
                        html += '<td class="fs-6">' + item.createOn + '</td>';
                        html += '<td class="fs-6">' + item.reportTime + '</td>';
                        html += '<td class="fs-6">' + item.title + '</td>';
                        html += '<td class="fs-6">' + item.rate + '</td>';
                        html += '<td class="fs-6">' + item.contentPost + '</td>';
                        html += '<td class="text-end fs-6">' + item.price + '</td>';
                        html += '<td class="text-end fs-6">' + item.approveBy + '</td>';
                        html += '<td class="text-end fs-6">' + item.approveDate + '</td>';
                        html += '<td class="text-end fs-6">' + item.categoryId + '</td>';
                        html += '<td class="text-end"><img src="' + (item.imgKey ? item.imgKey : "../imgs/loading.png") + '" style="width:auto; height:100px"/></td>';
                        html += '<td><a href="#" onclick="return edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="delele(\'' + item.id + '\')">Delete</a></td>';
                        html += '</tr>';
                    });
                    $('.tblTopUpList').html(html);
                    var totalCount = searchList.length;
                    var totalPages = Math.ceil(totalCount / pageSize);
                    renderPagination(page, totalPages);
                } else {
                    $('.tblTopUpList').html('<tr><td colspan="11">No data available</td></tr>');
                    $('#pagination ul').empty();
                }
            }
        }

        function renderPagination(currentPage, totalPages) {
            var paginationHtml = '';
            for (var i = 1; i <= totalPages; i++) {
                if (i === currentPage) {
                    paginationHtml += '<li class="page-item active"><button class="page-link">' + i + '</button></li>';
                } else {
                    paginationHtml += '<li class="page-item"><button class="page-link" onclick="loadData(' + i + ')">' + i + '</button></li>';
                }
            }

            $('#pagination ul').html(paginationHtml);
        }

            var selectedProduct;
            function searchProduct() {
                searchList = [];
                var keyF = document.getElementById("keyFind").value ? document.getElementById("keyFind").value : " ";
                if (keyF == " " || methodF == 0) {
                    searchList = [];
                    loadData(1);
                }
                else {
                    var split = keyF.split(",");
                    var methodF = split.length;
                    var html = '';
                    $.each(loadedList, function (key, item) { 
                        var value1, value2, value3;
                        if (methodF == 1) { 
                            value1 = item.name.trim();
                            if (value1.toLowerCase().includes(split[0].toLowerCase())) {
                                html += '<tr>';
                                html += '<td class="fs-6">' + item.id + '</td>';
                                html += '<td class="fs-6">' + item.name + '</td>';
                                html += '<td class="fs-6">' + item.quantity + '</td>';
                                html += '<td class="fs-6">' + item.createOn + '</td>';
                                html += '<td class="fs-6">' + item.reportTime + '</td>';
                                html += '<td class="fs-6">' + item.title + '</td>';
                                html += '<td class="fs-6">' + item.rate + '</td>';
                                html += '<td class="fs-6">' + item.contentPost + '</td>';
                                html += '<td class="text-end fs-6">' + item.price + '</td>';
                                html += '<td class="text-end fs-6">' + item.approveBy + '</td>';
                                html += '<td class="text-end fs-6">' + item.approveDate + '</td>';
                                html += '<td class="text-end fs-6">' + item.categoryId + '</td>';
                                html += '<td class="text-end"><img src="' + (item.imgKey ? item.imgKey : "../imgs/loading.png") + '" style="width:auto; height:100px"/></td>';
                                html += '<td><a href="#" onclick="return edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="delele(\'' + item.id + '\')">Delete</a></td>';
                                html += '</tr>';
                                searchList.push(item);
                            }
                        }
                        else if (methodF == 2) {
                            value1 = item.name.trim();
                            value2 = item.title.trim();
                            if (value1.toLowerCase().includes(split[0].toLowerCase()) && value2.toLowerCase().includes(split[1].toLowerCase())) {
                                html += '<tr>';
                                html += '<td class="fs-6">' + item.id + '</td>';
                                html += '<td class="fs-6">' + item.name + '</td>';
                                html += '<td class="fs-6">' + item.quantity + '</td>';
                                html += '<td class="fs-6">' + item.createOn + '</td>';
                                html += '<td class="fs-6">' + item.reportTime + '</td>';
                                html += '<td class="fs-6">' + item.title + '</td>';
                                html += '<td class="fs-6">' + item.rate + '</td>';
                                html += '<td class="fs-6">' + item.contentPost + '</td>';
                                html += '<td class="text-end fs-6">' + item.price + '</td>';
                                html += '<td class="text-end fs-6">' + item.approveBy + '</td>';
                                html += '<td class="text-end fs-6">' + item.approveDate + '</td>';
                                html += '<td class="text-end fs-6">' + item.categoryId + '</td>';
                                html += '<td class="text-end"><img src="' + (item.imgKey ? item.imgKey : "../imgs/loading.png") + '" style="width:auto; height:100px"/></td>';
                                html += '<td><a href="#" onclick="return edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="delele(\'' + item.id + '\')">Delete</a></td>';
                                html += '</tr>';
                                searchList.push(item);
                            }
                        }
                        else if (methodF == 3) {
                            value1 = item.name.trim();
                            value2 = item.title.trim();
                            value3 = item.contentPost.trim();
                            if (value1.toLowerCase().includes(split[0].toLowerCase()) && value2.toLowerCase().includes(split[1].toLowerCase()) && value3.toLowerCase().includes(split[2].toLowerCase())) {
                                html += '<tr>';
                                html += '<td class="fs-6">' + item.id + '</td>';
                                html += '<td class="fs-6">' + item.name + '</td>';
                                html += '<td class="fs-6">' + item.quantity + '</td>';
                                html += '<td class="fs-6">' + item.createOn + '</td>';
                                html += '<td class="fs-6">' + item.reportTime + '</td>';
                                html += '<td class="fs-6">' + item.title + '</td>';
                                html += '<td class="fs-6">' + item.rate + '</td>';
                                html += '<td class="fs-6">' + item.contentPost + '</td>';
                                html += '<td class="text-end fs-6">' + item.price + '</td>';
                                html += '<td class="text-end fs-6">' + item.approveBy + '</td>';
                                html += '<td class="text-end fs-6">' + item.approveDate + '</td>';
                                html += '<td class="text-end fs-6">' + item.categoryId + '</td>';
                                html += '<td class="text-end"><img src="' + (item.imgKey ? item.imgKey : "../imgs/loading.png") + '" style="width:auto; height:100px"/></td>';
                                html += '<td><a href="#" onclick="return edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="delele(\'' + item.id + '\')">Delete</a></td>';
                                html += '</tr>';
                                searchList.push(item);
                            }
                        }
                    });
                    $('.tblTopUpList').html(html);
                    loadData(1);
                }
            }
            function edit(id) {
                $("#topUpModalContentUpdate").html("");
                $("#topUpModalLabelUpdate").html("Update");

                var formData = new FormData();
                formData.append("Id", id);
                $.ajax({
                url: '@Url.Action("Edit", "Product")',
                    type: "GET",
                    data: { id: id },
                    success: function (result) {
                        $("#exchangeModalContentUpdate").html(result);
                        $('#exchangeModalUpdate').modal('show');
                    },
                    error: function (message) {
                        alert(message);
                    }
                });
                loadData(1);
            }

            function delele(id) {
                console.log("ahsidhaoid" + id);
                var result = confirm("Are you sure to delete?");
                if (result) {
                    $.ajax({
                        url: '@Url.Action("DeleteProduct", "Product")' + `?id=${id}`,
                        type: "DELETE",
                        processData: false,
                        contentType: false,
                        success: function (result) {
                            loadData();
                            console.log(id);
                        },
                        error: function (message) {
                            alert(message);
                        }
                    });
                }
            }
        const uploadField = document.getElementById("img");
        uploadField.onchange = function () {
            if (this.files[0].size > 5242880) { // 5 MB in bytes
                alert("File is too big! Please select a smaller file.");
                this.value = ""; // Clear the input field
            }
        };
            function submit(){
               var id = document.getElementById("pid").value? document.getElementById("pid").value : null;
                if (id == null) {
                    var product = {
                        "id": 0,
                        "name": document.getElementById("pname").value,
                        "quantity": document.getElementById("quantity").value,
                        "status": 1,
                        "studentId": 2,
                        "createOn": "2024-06-03T07:13:04.157Z",
                        "reportTime": null,
                        "rate": 0,
                        "title": document.getElementById("title").value,
                        "contentPost": document.getElementById("content").value,
                        "price": document.getElementById("price").value,
                        "approveBy": "2",
                        "approveDate": "2024-06-03T07:13:04.157Z",
                        "categoryId": 2
                    }
                var formData = new FormData();
                formData.append("product", JSON.stringify(product)); // Add product data

                // Access the image file element
                var imgFile = document.getElementById("imgP").files[0];

                if (imgFile) {
                    formData.append("img", imgFile); // Add image file
                }
                    $.ajax({
                        url: '@Url.Action("CreateProduct", "Product")',
                        type: "POST",
                        data: formData,
                        success: function (result) {
                            loadData(1);
                            document.getElementById("btnCloseModal").click();
                        },
                        error: function (message) {
                            alert(message);
                        }
                    });
                } else {
                    var product = {
                        "id": document.getElementById("pid").value,
                        "name": document.getElementById("pname").value,
                        "quantity": document.getElementById("quantity").value,
                        "status": selectedProduct.status,
                        "studentId": selectedProduct.studentId,
                        "createOn": selectedProduct.createOn,
                        "reportTime": selectedProduct.reportTime,
                        "rate": selectedProduct.rate,
                        "title": document.getElementById("title").value,
                        "contentPost": document.getElementById("content").value,
                        "price": document.getElementById("price").value,
                        "approveBy": selectedProduct.approveBy,
                        "approveDate": selectedProduct.approveDate,
                        "categoryId": selectedProduct.categoryId,
                    }
                    console.log(product);
                    $.ajax({
                        url: '@Url.Action("UpdateProduct", "Product")',
                        type: "PUT",
                        data: product,
                        success: function (result) {
                            loadData(1);
                            document.getElementById("btnCloseModal").click();
                        },
                        error: function (message) {
                            alert(message);
                        }
                    });
                }
            }
        </script>
    }
