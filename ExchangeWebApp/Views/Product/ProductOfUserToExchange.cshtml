@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model ExchangeWebApp.Models.ProductDTO

<div class="text-start">
    <div class="row justify-content-between">
        <div class="col-md-3">
            <h3 class="display-8">Post List Of User</h3>
        </div>
        <div class="col-md-5 text-end d-flex justify-content-between">
            <input type="text" class="form-control m-1" id="keyFind" placeholder="Search...." />
            <select id="methodFind" class="form-control m-1" style="width:90px">
                <option value="1">Name</option>
                <option value="2">Title</option>
                <option value="3">Content</option>
            </select>
            <button class="btn btn-primary m-1" id="btnFind" style="min-width:80px" type="button" onclick="searchProduct()">Search</button>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr class="card-header">
                        <th class="card-title text-center">Product Id</th>
                        <th class="card-title text-center">Product Name</th>
                        <th class="card-title text-center">Quantity</th>
                        <th class="card-title text-center">Title</th>
                        <th class="card-title text-center">Rate</th>
                        <th class="card-title text-center">Content</th>
                        <th class="card-title text-center">Price</th>
                        <th class="card-title text-center">Category Id</th>
                        <th class="card-title text-center">Image</th>
                        <th class="card-title text-center">Action</th>
                    </tr>
                </thead>
                <tbody class="tblTopUpList">
                </tbody>
            </table>
        </div>
    </div>

    <div class="modal fade" id="exchangeModalUpdate" tabindex="-1" aria-labelledby="exchangeModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                @using (Html.BeginForm("UpdateProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data", name = "frm", id = "frm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="exchangeModalLabelUpdate">TopUp Transaction</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div id="exchangeModalContentUpdate"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                }
            </div>
        </div>
    </div>

</div>
@section scripts {
    <script type="text/javascript">
        var loadedList = [];
        $(document).ready(function () {
            loadData();
        });
        function submitAdd() {
            document.getElementById("addForm").submit();
        }
        function loadData() {
            $.ajax({
                url: '@Url.Action("GetAll", "Product")',
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var html = '';
                    var htmlPending = '';
                    var htmlOld = '';
                    $.each(result.filter(s=>s.status == 1), function (key, item) {
                        loadedList.push(item);
                        html += '<tr>';
                        html += '<td class="fs-6">' + item.id + '</td>';
                        html += '<td class="fs-6">' + item.name + '</td>';
                        html += '<td class="fs-6">' + item.quantity + '</td>';
                        html += '<td class="fs-6">' + item.title + '</td>';
                        html += '<td class="fs-6">' + item.rate + '</td>';
                        html += '<td class="fs-6">' + item.contentPost + '</td>';
                        html += '<td class="text-end fs-6">' + item.price + '</td>';
                        html += '<td class="text-end fs-6">' + item.categoryId + '</td>';
                        html += '<td class="text-end"><img src="' + (item.imgKey ? item.imgKey : "../imgs/loading.png") + '" style="width:auto; height:100px"/></td>';
                        html += '<td><a href="#" onclick="return edit(\'' + item.id + '\',\'' + item.price + '\')">Exchange</a>';
                        html += '</tr>';
                    });                
                    $('.tblTopUpList').html(html);
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }
        var selectedProduct;
        function searchProduct() {
            var keyF = document.getElementById("keyFind").value ? document.getElementById("keyFind").value : " ";
            var methodF = document.getElementById("methodFind").value ? document.getElementById("methodFind").value : 0;
            if (keyF == " " || methodF == 0) loadData();
            else {
                var html = '';
                var htmlPending = '';
                var htmlOld = '';
                $.each(loadedList.filter(s => s.status == 1), function (key, item) {
                    var value;
                    if (methodF == 1) value = item.name;
                    else if (methodF == 2) value = item.title;
                    else if (methodF == 3) value = item.contentPost;
                    if (value.toLowerCase().includes(keyF.toLowerCase())) {

                        html += '<tr>';
                        html += '<td class="fs-6">' + item.id + '</td>';
                        html += '<td class="fs-6">' + item.name + '</td>';
                        html += '<td class="fs-6">' + item.quantity + '</td>';
                        html += '<td class="fs-6">' + item.createOn + '</td>';
                        html += '<td class="fs-6">' + item.reportTime + '</td>';
                        html += '<td class="fs-6">' + item.title + '</td>';
                        html += '<td class="fs-6">' + item.rate + '</td>';
                        html += '<td class="fs-6">' + item.contentPost + '</td>';
                        html += '<td class="text-end fs-6">' + item.price + '</td>';
                        html += '<td class="text-end fs-6">' + item.approveBy + '</td>';
                        html += '<td class="text-end fs-6">' + item.approveDate + '</td>';
                        html += '<td class="text-end fs-6">' + item.categoryId + '</td>';
                        html += '<td class="text-end "><img src="' + (item.imgKey ? item.imgKey : "../imgs/loading.png") + '" style="width:auto; height:100px"/></td>';
                        html += '<td><a href="#" onclick="return edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="delele(\'' + item.id + '\')">Delete</a></td>';
                        html += '</tr>';
                    }
                });
                $.each(loadedList.filter(s => s.status == 0), function (key, item) {
                    var value;
                    if (methodF == 1) value = item.name;
                    else if (methodF == 2) value = item.title;
                    else if (methodF == 3) value = item.contentPost;
                    if (value.toLowerCase().includes(keyF.toLowerCase())) {
                        htmlPending += '<tr>';
                        htmlPending += '<td class="fs-6">' + item.id + '</td>';
                        htmlPending += '<td class="fs-6">' + item.name + '</td>';
                        htmlPending += '<td class="fs-6">' + item.quantity + '</td>';
                        htmlPending += '<td class="fs-6">' + item.createOn + '</td>';
                        htmlPending += '<td class="fs-6">' + item.reportTime + '</td>';
                        htmlPending += '<td class="fs-6">' + item.title + '</td>';
                        htmlPending += '<td class="fs-6">' + item.rate + '</td>';
                        htmlPending += '<td class="fs-6">' + item.contentPost + '</td>';
                        htmlPending += '<td class="text-end fs-6">' + item.price + '</td>';
                        htmlPending += '<td class="text-end fs-6">' + item.approveBy + '</td>';
                        htmlPending += '<td class="text-end fs-6">' + item.approveDate + '</td>';
                        htmlPending += '<td class="text-end fs-6">' + item.categoryId + '</td>';
                        htmlPending += '<td class="text-end"><img src="' + (item.imgKey ? item.imgKey : "../imgs/loading.png") + '" style="width:auto; height:100px"/></td>';
                        htmlPending += '<td><a href="#" onclick="return edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="delele(\'' + item.id + '\')">Delete</a></td>';
                        htmlPending += '</tr>';
                    }
                });
                $.each(loadedList.filter(s => s.status == 2), function (key, item) {
                    var value;
                    if (methodF == 1) value = item.name;
                    else if (methodF == 2) value = item.title;
                    else if (methodF == 3) value = item.contentPost;
                    if (value.toLowerCase().includes(keyF.toLowerCase())) {
                        htmlOld += '<tr>';
                        htmlOld += '<td class="fs-6">' + item.id + '</td>';
                        htmlOld += '<td class="fs-6">' + item.name + '</td>';
                        htmlOld += '<td class="fs-6">' + item.quantity + '</td>';
                        htmlOld += '<td class="fs-6">' + item.createOn + '</td>';
                        htmlOld += '<td class="fs-6">' + item.reportTime + '</td>';
                        htmlOld += '<td class="fs-6">' + item.title + '</td>';
                        htmlOld += '<td class="fs-6">' + item.rate + '</td>';
                        htmlOld += '<td class="fs-6">' + item.contentPost + '</td>';
                        htmlOld += '<td class="text-end fs-6">' + item.price + '</td>';
                        htmlOld += '<td class="text-end fs-6">' + item.approveBy + '</td>';
                        htmlOld += '<td class="text-end fs-6">' + item.approveDate + '</td>';
                        htmlOld += '<td class="text-end fs-6">' + item.categoryId + '</td>';
                        htmlOld += '<td class="text-end"><img src="' + (item.imgKey ? item.imgKey : "../imgs/loading.png") + '" style="width:auto; height:100px"/></td>';
                        htmlOld += '<td><a href="#" onclick="return edit(\'' + item.id + '\')">Edit</a> | <a href="#" onclick="delele(\'' + item.id + '\')">Delete</a></td>';
                        htmlOld += '</tr>';
                    }
                });
                $('.tblTopUpList').html(html);
                $('.tblTopUpListPending').html(htmlPending);
                $('.tblTopUpListOld').html(htmlOld);
            }
        }
        function edit(id, price) {
            var data = {
                "productId": id,
                "quantity": 1,
                "note": "",
                "price": price,
                "studentBuy": 3,
                "typeTransactions": "Exchange"
            }
            console.log(data)
            if (confirm("You want to ORDER this product") == true) {
                $.ajax({
                    url: '@Url.Action("Create", "Transactions")',
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify(data),
                    success: function (result) {
                        console.log(result);
                        createTransaction(result.data);
                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            }
            else {
                alert("cancel");
            }
        }
        function createTransaction(transaction) {
            var sell = {
                "id": 0,
                "exchangeId": transaction.productId,
                "transactionId": transaction.id,
                "status": 0,
                "sendDate": transaction.createAt,
                "shipCost": 0,
                "shipCode": makeid(5),
                "shipStatus": 0
            }
            $.ajax({
                url: '@Url.Action("CreateExchangeJS", "Exchange")',
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                data: JSON.stringify(sell),
                success: function (result) {
                    console.log(result);
                    alert("Exchange Success full, wait to receive")
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }
        function makeid(length) {
            let result = '';
            const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            const charactersLength = characters.length;
            let counter = 0;
            while (counter < length) {
                result += characters.charAt(Math.floor(Math.random() * charactersLength));
                counter += 1;
            }
            return result;
        }
        
    </script>
}